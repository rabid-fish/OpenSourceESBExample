package https.github_com.rabid_fish;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 2.4.6
 * 2012-04-24T16:06:36.241-05:00
 * Generated source version: 2.4.6
 * 
 */
@WebServiceClient(name = "MathOperationService", 
                  wsdlLocation = "file:/C:/Users/Dan/Workspaces/workspace-time/cijug-webservice/src/main/resources/cijug-webservice.wsdl",
                  targetNamespace = "https://github.com/rabid-fish") 
public class MathOperationService extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("https://github.com/rabid-fish", "MathOperationService");
    public final static QName MathOperationPort = new QName("https://github.com/rabid-fish", "MathOperationPort");
    static {
        URL url = null;
        try {
            url = new URL("file:/C:/Users/Dan/Workspaces/workspace-time/cijug-webservice/src/main/resources/cijug-webservice.wsdl");
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(MathOperationService.class.getName())
                .log(java.util.logging.Level.INFO, 
                     "Can not initialize the default wsdl from {0}", "file:/C:/Users/Dan/Workspaces/workspace-time/cijug-webservice/src/main/resources/cijug-webservice.wsdl");
        }
        WSDL_LOCATION = url;
    }

    public MathOperationService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public MathOperationService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public MathOperationService() {
        super(WSDL_LOCATION, SERVICE);
    }
    

    /**
     *
     * @return
     *     returns MathOperationPortType
     */
    @WebEndpoint(name = "MathOperationPort")
    public MathOperationPortType getMathOperationPort() {
        return super.getPort(MathOperationPort, MathOperationPortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns MathOperationPortType
     */
    @WebEndpoint(name = "MathOperationPort")
    public MathOperationPortType getMathOperationPort(WebServiceFeature... features) {
        return super.getPort(MathOperationPort, MathOperationPortType.class, features);
    }

}
